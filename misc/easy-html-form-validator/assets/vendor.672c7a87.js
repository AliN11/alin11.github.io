var p=Object.defineProperty,h=(r,e,t)=>e in r?p(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,g=(r,e,t)=>(h(r,typeof e!="symbol"?e+"":e,t),t);class s{constructor(e,t){this.message=e,this.element=t}}function b(r){return r.value.trim()===""?new s("Input value is required",r):!0}function E(r,e){return r.value.length<parseInt(e)?new s(`Min length is ${e}`,r):!0}function y(r){const e=document.createElement("input");return e.type="email",e.required=!0,e.value=r.value,(typeof e.checkValidity=="function"?e.checkValidity():/\S+@\S+\.\S+/.test(r.value))===!0?!0:new s("Please enter a valid email",r)}function w(r,e){const t=e.split(","),n=parseInt(t[0]),i=parseInt(t[1]);if(!isNaN(n)&&!isNaN(i)){const l=parseInt(r.value);if(!isNaN(l)&&l>=n&&l<=i)return!0}return new s(`Please enter a number between ${n} and ${i}`,r)}function N(r){return r.value===String(Number(r.value))?!0:new s("Please enter a valid number",r)}function m(r){return/^[0-9]+$/.test(r.value)?!0:new s("The value must be a valid integer",r)}var v={required:b,min:E,email:y,between:w,number:N,int:m,integer:m};class S{constructor(e){g(this,"invalidElements",[]);const t=document.querySelector(e);t.onsubmit=n=>{try{this.removeErrors(),this.invalidElements=[];const i=t.querySelectorAll("[v-rules]");Array.prototype.forEach.call(i,l=>{var c;const u=(c=l.getAttribute("v-rules"))==null?void 0:c.split("|");if(u)for(const a of u){let o=a,f="";if(this.ruleHasArguments(a)&&([o,f]=a.split(":")),v.hasOwnProperty(o)){const d=v[o](l,f);if(d instanceof s&&(this.invalidElements.unshift(d),this.shouldStopOnFirstFailure(u)))break}}}),this.invalidElements.length>0&&(n.preventDefault(),this.displayErrors())}catch(i){console.log(i)}}}ruleHasArguments(e){return e.split(":").length===2}shouldStopOnFirstFailure(e){return e.includes("bail")}displayErrors(){for(const e of this.invalidElements){const t=e.element,n=document.createElement("p");n.classList.add("validator-err"),n.innerHTML=e.message,t.parentNode&&t.parentNode.insertBefore(n,t.nextSibling)}}removeErrors(){document.querySelectorAll(".validator-err").forEach(e=>{e.remove()})}}export{S as V};
